{"version":3,"file":"static/js/247.c03ca376.chunk.js","mappings":"oSAQMA,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAEP,SAASC,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAqBE,EAAAA,EAAAA,KAAbC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAwBb,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,WAAMN,GAAN,uFAEdH,EAAQ,IACRE,EAAS,IAHK,SAISQ,EAAAA,EAAAA,IAAA,UACbJ,EADa,iBACDH,EADC,oBACkBI,EADlB,oBAEpBI,MAAK,SAAAC,GACJ,OAAOA,EAAIC,KAAKd,IACjB,IARW,OASU,KALlBe,EAJQ,QASDC,QACXb,EAAS,yCAEXF,EAAQc,GAZM,kDAcdZ,EAAS,EAAD,IAdM,0DAAH,sDAkBfO,EAAUN,EACX,GAAE,CAACA,EAASI,EAAKD,KAGhB,gCACGL,IAAS,SAAC,KAAD,UAAQA,IACjBF,EAAKgB,OAAS,IACb,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAACtB,EAAD,CAAUI,KAAMA,QAKzB,C,2OC9CYmB,EAAOC,EAAAA,GAAAA,GAAH,sGAMJC,EAAWD,EAAAA,GAAAA,IAAH,uNAURE,EAAQF,EAAAA,GAAAA,IAAH,yCAGLG,EAAYH,EAAAA,GAAAA,IAAH,yEAKTI,EAAOJ,EAAAA,GAAAA,KAAH,oGAMJK,EAAUL,EAAAA,GAAAA,KAAH,iHAMPM,EAAQN,EAAAA,GAAAA,GAAH,8C","sources":["components/Cast/Cast.jsx","components/Cast/Cast.styled.jsx"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { useContexFetch } from '../../services/useContext';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Loader } from 'components/Loader';\n\nimport { Title } from './Cast.styled';\n\nconst CastData = lazy(() => import('./CastData'));\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const { url, key } = useContexFetch();\n\n  useEffect(() => {\n    const fetchCast = async movieId => {\n      try {\n        setCast([]);\n        setError('');\n        const response = await axios\n          .get(`${url}movie/${movieId}/credits?${key}&language=en-US`)\n          .then(res => {\n            return res.data.cast;\n          });\n        if (response.length === 0) {\n          setError(\"We don't have any cast for this movie\");\n        }\n        setCast(response);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchCast(movieId);\n  }, [movieId, key, url]);\n\n  return (\n    <>\n      {error && <Title>{error}</Title>}\n      {cast.length > 0 && (\n        <Suspense fallback={<Loader />}>\n          <CastData cast={cast} />\n        </Suspense>\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px 24px;\n  list-style: none;\n`;\nexport const ListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  -moz-box-pack: justify;\n  justify-content: space-between;\n  padding: 8px;\n  width: 200px;\n  border: 1px solid grey;\n  border-radius: 4px;\n`;\nexport const Image = styled.img`\n  width: 200px;\n`;\nexport const Character = styled.div`\n  padding: 0;\n  margin: 0;\n  font-size: 16px;\n`;\nexport const Name = styled.span`\n  padding: 0;\n  margin: 0 0 8px;\n  font-size: 16px;\n  font-weight: 700;\n`;\nexport const Wrapper = styled.span`\n  margin-top: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Title = styled.h3`\n  padding-left: 20px;\n`;\n"],"names":["CastData","lazy","Cast","useState","cast","setCast","error","setError","movieId","useParams","useContexFetch","url","key","useEffect","fetchCast","axios","then","res","data","response","length","Suspense","fallback","List","styled","ListItem","Image","Character","Name","Wrapper","Title"],"sourceRoot":""}